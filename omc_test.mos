/*
 * A simple OpenModelica script to verify that MessagePack works correctly
 */

loadFile("MessagePack/package.mo");getErrorString();
mkdir("tmp");
cd("tmp");
writeFile("MessagePack.mo",list(exportKind=OpenModelica.Scripting.ExportKind.Absyn));getErrorString();
setCFlags(getCFlags() + " -g");getErrorString();
loadString("function f
  input String file;
protected
  import MessagePack.Pack;
  Pack.SimpleBuffer.SimpleBuffer sbuffer = Pack.SimpleBuffer.SimpleBuffer();
  Pack.Packer packer = Pack.Packer(sbuffer);
algorithm
  Pack.integer(packer,-65538);
  Pack.string(packer,\"OpenModelica\");
  Pack.map(packer, 1);
  Pack.double(packer,1.0);
  Pack.bool(packer,true);
  Pack.sequence(packer, 2);
  Pack.integer(packer,65538);
  Pack.double(packer,2.0);
  Pack.bool(packer,false);
  print(String(Pack.string(packer,\"OpenModelica\")));
  Pack.SimpleBuffer.writeFile(sbuffer,file);
end f;

function g
  input String file;
protected
  import MessagePack.Utilities.StringStream;
  import MessagePack.Unpack;
  Unpack.Deserializer deserializer = Unpack.Deserializer(file);
  StringStream.StringStream ss = StringStream.StringStream();
  Integer offset = 0, i;
  String s;
  Boolean success;
algorithm
  (i,offset) := Unpack.integer(deserializer,offset);
  print(String(i) + \" offset: \" + String(offset) +\"\n\");
  (s,offset) := Unpack.string(deserializer,offset);
  print(s + \" offset: \" + String(offset) +\"\n\");
  offset := Unpack.toStringStream(deserializer,ss,offset);
  print(StringStream.get(ss) + \" offset: \" + String(offset) +\"\n\");
  print(StringStream.get(ss) + \" offset: \" + String(offset) +\"\n\");
  success := true;
  while success loop
    (offset,success) := Unpack.toStringStream(deserializer,ss,offset);
    StringStream.append(ss,\"\n\");
  end while;
  print(StringStream.get(ss) + \"offset: \" + String(offset) +\"\n\");
end g;
");getErrorString();
system("rm -f out.msgpack");getErrorString();
f("out.msgpack");getErrorString();
system("ls -l out.msgpack");getErrorString();
g("out.msgpack");getErrorString();
